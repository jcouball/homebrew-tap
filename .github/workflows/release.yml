name: Update Homebrew Formula

on:
  workflow_dispatch:
    inputs:
      formula_name:
        description: 'The name of the formula to update (e.g., scripts)'
        required: true
        type: string
      version:
        description: 'The new version of the software (e.g., 1.2.3)'
        required: true
        type: string
      source_repository_path:
        description: 'The owner/repo path of the source repository (e.g., jcouball/scripts)'
        required: true
        type: string

permissions:
  contents: write # To commit and push changes to the formula file

jobs:
  update_formula:
    name: Update ${{ github.event.inputs.formula_name }} Formula
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443 # For checkout
            github.com:443    # For checkout and downloading tarballs

      - name: Checkout Tap Repository
        uses: actions/checkout@v4

      - name: Prepare Variables
        id: prep
        run: |
          FORMULA_NAME="${{ github.event.inputs.formula_name }}"
          VERSION="${{ github.event.inputs.version }}"
          SOURCE_REPO_PATH="${{ github.event.inputs.source_repository_path }}"

          FORMULA_FILE="Formula/${FORMULA_NAME}.rb"
          # Construct tarball URL - assumes source repo tags are like 'vX.Y.Z'
          TARBALL_URL="https://github.com/${SOURCE_REPO_PATH}/archive/refs/tags/v${VERSION}.tar.gz"

          echo "Formula Name: ${FORMULA_NAME}"
          echo "Version: ${VERSION}"
          echo "Source Repository: ${SOURCE_REPO_PATH}"
          echo "Formula File: ${FORMULA_FILE}"
          echo "Tarball URL: ${TARBALL_URL}"

          echo "formula_file_path=${FORMULA_FILE}" >> $GITHUB_OUTPUT
          echo "tarball_url=${TARBALL_URL}" >> $GITHUB_OUTPUT
          echo "new_version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Download Tarball and Calculate SHA256
        id: download
        run: |
          TARBALL_URL="${{ steps.prep.outputs.tarball_url }}"
          TEMP_TARBALL_NAME="source_release.tar.gz"

          echo "Downloading ${TARBALL_URL}..."
          # Use curl with -f to fail fast on server errors, -L to follow redirects
          curl -sfL -o "${TEMP_TARBALL_NAME}" "${TARBALL_URL}"

          if [ ! -f "${TEMP_TARBALL_NAME}" ] || [ ! -s "${TEMP_TARBALL_NAME}" ]; then
            echo "Error: Failed to download tarball or tarball is empty from ${TARBALL_URL}."
            exit 1
          fi

          NEW_SHA256=$(sha256sum "${TEMP_TARBALL_NAME}" | awk '{ print $1 }')
          echo "Calculated SHA256: ${NEW_SHA256}"
          rm "${TEMP_TARBALL_NAME}" # Clean up

          echo "new_sha256=${NEW_SHA256}" >> $GITHUB_OUTPUT

      - name: Update Formula File
        run: |
          FORMULA_FILE="${{ steps.prep.outputs.formula_file_path }}"
          NEW_VERSION="${{ steps.prep.outputs.new_version }}"
          NEW_URL="${{ steps.prep.outputs.tarball_url }}"
          NEW_SHA256="${{ steps.download.outputs.new_sha256 }}"

          echo "Updating formula file: ${FORMULA_FILE}"

          # This script runs on ubuntu-latest, so Linux sed is expected.
          # The -i option for sed on Linux works directly.
          sed -i "s|^\s*version\s*\".*\"|  version \"${NEW_VERSION}\"|" "${FORMULA_FILE}"
          sed -i "s|^\s*url\s*\".*\"|  url \"${NEW_URL}\"|" "${FORMULA_FILE}"
          sed -i "s|^\s*sha256\s*\".*\"|  sha256 \"${NEW_SHA256}\"|" "${FORMULA_FILE}"

          echo "Formula file ${FORMULA_FILE} updated."
          echo "--- Content of ${FORMULA_FILE} ---"
          cat "${FORMULA_FILE}"
          echo "--- End of ${FORMULA_FILE} ---"

      - name: Commit and Push Changes
        run: |
          FORMULA_NAME="${{ github.event.inputs.formula_name }}"
          NEW_VERSION="${{ steps.prep.outputs.new_version }}"
          FORMULA_FILE_PATH="${{ steps.prep.outputs.formula_file_path }}"

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add "${FORMULA_FILE_PATH}"
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit to ${FORMULA_FILE_PATH}."
          else
            git commit -m "Update ${FORMULA_NAME} to v${NEW_VERSION}"
            echo "Pushing changes..."
            git push
            echo "Changes pushed successfully."
          fi